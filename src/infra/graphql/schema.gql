type Like {
  id: ID!
  author: Author!
  entityId: String!
  entityType: String!
}

interface Likeable {
  likes: [Like]!
}

type Author implements Likeable {
  id: ID!
  nickname: String!
  email: String!
  topics: [Topic]!
  comments: [Comment]!
  likes: [Like]!
}

type Topic implements Likeable {
  id: ID!
  title: String!
  text: String
  author: Author!
  likes: [Like]!
}

type Comment implements Likeable {
  id: ID!
  text: String!
  author: Author!
  comments: [Comment]!
  likes: [Like]!
}

type Query {
  topics: [Topic]
  author(id: ID!): Author
  authors: [Author]!
}

input TopicInput {
  title: String!
  text: String
  author: ID!
}

input AccountInput {
  email: String!
  password: String!
}

type Mutation {
  createAccount(accountInput: AccountInput!): String!
  deleteAccount(accountInput: AccountInput!): Boolean!
  login(accountInput: AccountInput!): String!
  saveTopic(input: TopicInput!): Topic
  like(id: String!, type: String!): Boolean
}
